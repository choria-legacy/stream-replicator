version: 2
jobs:
  test:
    docker:
      - image: circleci/golang:1.9

    working_directory: /go/src/github.com/choria-io/stream-replicator

    steps:
      - checkout
      - setup_remote_docker
      - run: set
      - run: go get github.com/Masterminds/glide
      - run: go get github.com/onsi/ginkgo/ginkgo
      - run: glide install
      - run: ginkgo -p -skipMeasurements $(glide novendor)
      - run: mkdir -p /tmp/workspace
      - run: cd .. ; tar -czf /tmp/workspace/stream-replicator.tgz stream-replicator
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - stream-replicator.tgz

  build_puppet_module:
    docker:
      - image: circleci/golang:1.9

    working_directory: /go/src/github.com/choria-io/stream-replicator

    steps:
      - attach_workspace:
          at: /tmp/workspace

      - run: cd .. ; tar -xzf /tmp/workspace/stream-replicator.tgz

      - run: sudo apt-get update
      - run: sudo apt-get install rake puppet
      - run: |
          cd puppet
          sed -i.bak -re "s/(.+\"version\": \").+/\1${CIRCLE_TAG}\",/" metadata.json
          sed -i.bak -re "s/(.+version = \").+/\1${CIRCLE_TAG}\",/" manifests/init.pp

          puppet module build .

          mkdir -p /tmp/workspace/artifacts/puppet

          cp pkg/*.tar.gz /tmp/workspace/artifacts/puppet/

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - artifacts

  build_el6_64bit_rpms:
    docker:
      - image: circleci/golang:1.9

    working_directory: /go/src/github.com/choria-io/stream-replicator

    environment:
      - DIST: el6
      - ARCH: amd64
      - RPMARCH: x86_64

    steps: &std_build_steps
      - setup_remote_docker

      - attach_workspace:
          at: /tmp/workspace

      - run: docker create -v /build --name store alpine:3.4 /bin/true
      - run: cd .. ; tar -xzf /tmp/workspace/stream-replicator.tgz

      - run: sudo apt-get update
      - run: sudo apt-get install rake

      - run: VERSION=${CIRCLE_TAG} rake build
      - run: VERSION=${CIRCLE_TAG} ./build/prepare.sh

      - run: docker run --volumes-from store --rm -e ARCH=${RPMARCH} -e VERSION=${CIRCLE_TAG} ripienaar/rpmbuilder:5
      - run: |
          mkdir -p /tmp/workspace/artifacts/${DIST}/${ARCH}

          for i in $(docker run --volumes-from store --rm ripienaar/rpmbuilder:5 ls /build/|grep rpm);do
            docker cp store:/build/${i} /tmp/workspace/artifacts/${DIST}/${ARCH}
          done

          ls -l /tmp/workspace/artifacts/${DIST}/${ARCH}

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - artifacts

  build_el7_64bit_rpms:
    docker:
      - image: circleci/golang:1.9

    working_directory: /go/src/github.com/choria-io/stream-replicator

    environment:
      - DIST: el7
      - ARCH: amd64
      - RPMARCH: x86_64

    steps:
      *std_build_steps

  gather_artifacts:
    docker:
      - image: circleci/golang:1.9

    steps:
      - attach_workspace:
          at: /tmp/workspace

      - run: ls /tmp/workspace

      - store_artifacts:
          path: /tmp/workspace

workflows:
  version: 2
  test_and_ship:
    jobs:
      - test:
          filters:
            tags:
              only: /.+/

      - hold:
          type: approval
          requires:
           - test
          filters: &semver_only
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/

      - build_el6_64bit_rpms:
          requires:
           - hold
          filters:
            *semver_only

      - build_el7_64bit_rpms:
          requires:
           - hold
          filters:
            *semver_only

      - build_puppet_module:
          requires:
           - hold
          filters:
            *semver_only

      - gather_artifacts:
          requires:
            - hold
            - build_el6_64bit_rpms
            - build_el7_64bit_rpms
            - build_puppet_module
          filters:
            *semver_only
